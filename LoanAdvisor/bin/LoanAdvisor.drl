package loan.advisor.drl

import loan.advisor.dto.Person
import loan.advisor.dto.LoanType
import loan.advisor.services.FeedbackService

global FeedbackService feedbackService


rule "Underage Persons"
	salience 100			//filter out the kids first
    when
        $person: Person(age < 18)
    then
    	feedbackService.addFeedback($person, 
    		String.format("You have to grow up first!"));
    	retract($person);
end

rule "Above maximum age limit"
    when
    	LoanType($loanName: name, $maxAge: maxAge)
        $person: Person(age > $maxAge)
    then
    	feedbackService.addFeedback($person,
    		String.format("You do NOT qualify for '%s': you are older than %d.", $loanName, $maxAge));
end

rule "Bellow minimum income"
    when
    	LoanType($loanName: name, $minIncome: minIncome)
        $person: Person(income < $minIncome)
    then
        feedbackService.addFeedback($person,
    		String.format("You do NOT qualify for '%s': you earn less than %,.2f â‚¬.", $loanName, $minIncome));
end

rule "Invalid citizenship"
    when
    	LoanType($loanName: name, $compatibleCitizenships: compatibleCitizenships)
        $person: Person(!$compatibleCitizenships.contains(citizenship))
    then
        feedbackService.addFeedback($person,
    		String.format("You do NOT qualify for '%s': this loan is available only in %s .", $loanName, $compatibleCitizenships.toString()));
end

rule "Valid for loan"
	when
		$loan: LoanType()
		$person: Person(age >= 18, age <= $loan.getMaxAge(), 
			income >= $loan.getMinIncome(),
			$loan.getCompatibleCitizenships().contains(citizenship))
	then
		feedbackService.addFeedback($person,
    		String.format("You qualify for '%s'! One of our agents will contact you shortly.", $loan.getName()));
end
